<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "DTD/xhtml1-transitional.dtd">
<!-- AUTHOR: Emcee Lam -->

<html xmlns="http://www.w3.org/1999/xhtml"
  xml:lang="en" lang="en">
  <head>
    <title>
      AJAX Map
    </title>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <meta http-equiv="Content-Script-Type" content="text/javascript" />
    <style type="text/css">
      #outerDiv {
        width: [% view_port_width %]px; height: [% view_port_height %]px; 
        border: 1px solid black; position: relative;
        overflow: hidden;
      }
      #innerDiv {
        position: relative; left: 0px; top: 0px;
      }
    </style>
    <script type="text/javascript">
      //<![CDATA[

      // constants
      var viewPortWidth = [% view_port_width %];
      var viewPortHeight = [% view_port_height %];
      var tileSize = 100;

      // variables for the map div
      var f_dragging = false;
      var top;
      var left;
      var dragStartTop;
      var dragStartLeft;
      var zoom = 0;
      var zoomSizes = [
        [% FOREACH dim = dimensions -%]
          [ [% dim.width %], [% dim.height %] ],
        [% END -%]
      ];

      // variables for the mini map
      var miniMapWidth  = [% mini_map_width %];
      var miniMapHeight = [% mini_map_height %];

      var magnifier = {
        f_dragging: false
      }

      var f_magnifierDragging = false;
      var magnifierTop;
      var magnifierLeft;
      var magnifierDragStartTop;
      var magnifierDragStartLeft;

      function init() {
        setInnerDivSize (zoomSizes[zoom][0], zoomSizes[zoom][1]);

        // main map
        var outerDiv = document.getElementById("outerDiv");
        outerDiv.onmousedown = startMove;
        outerDiv.onmousemove = processMove;
        outerDiv.onmouseup = stopMove;
        //outerDiv.onmouseout = stopMove;
        outerDiv.ondragstart = function() { return false; }  // for IE

        // mini map
        var magnifierDiv = document.getElementById("magnifier");
        magnifierDiv.onmousedown = magnifierStartMove;
        magnifierDiv.onmousemove = magnifierProcessMove;
        magnifierDiv.onmouseup = magnifierStopMove;
        //magnifierDiv.onmouseout = magnifierStopMove;
        magnifierDiv.ondragstart = function() { return false; }  // for IE

        var miniMapDiv = document.getElementById("miniMap");
        miniMapDiv.onmousedown = magnifierStartMove;
        miniMapDiv.onmousemove = magnifierProcessMove;
        miniMapDiv.onmouseup = magnifierStopMove;
        miniMapDiv.ondragstart = function() { return false; } // fore IE

        checkTiles();
        //alert ('hello world');
      }

      function startMove(event) {
        // for IE
        if (!event)
          event = window.event;

        dragStartLeft = event.clientX;
        dragStartTop  = event.clientY;
        var innerDiv = document.getElementById("innerDiv");
        innerDiv.style.cursor = "move";

        top = atoi(innerDiv.style.top);
        left = atoi(innerDiv.style.left);

        f_dragging = true;
        return false;
      }

      function magnifierStartMove(event) {
        // for IE
        if (!event)
          event = window.event;

        magnifierDragStartLeft = event.clientX;
        magnifierDragStartTop  = event.clientY;
        var magnifierDiv = document.getElementById("magnifier");
        magnifierDiv.style.cursor = "move";

        magnifierTop  = atoi(magnifierDiv.style.top);
        magnifierLeft = atoi(magnifierDiv.style.left);

        f_magnifierDragging = true;
        return false;
      }

      function processMove(event) {
        var zoomWidth  = zoomSizes[zoom][0];
        var zoomHeight = zoomSizes[zoom][1];
        var maxY = 0;
        var minY = -(zoomHeight - viewPortHeight);
        var maxX = 0;
        var minX = -(zoomWidth - viewPortWidth);

        if (!event) event = window.event;  // for IE
        var innerDiv = document.getElementById("innerDiv");
        if (f_dragging) {
          var shiftedTop = top + (event.clientY - dragStartTop);
          if (shiftedTop > maxY) shiftedTop = maxY;  // map is not infinite
          if (shiftedTop < minY) shiftedTop = minY;
          innerDiv.style.top = shiftedTop + "px";

          var shiftedLeft = left + (event.clientX - dragStartLeft);
          if (shiftedLeft > maxX) shiftedLeft = maxX; // map is not infinite
          if (shiftedLeft < minX) shiftedLeft = minX;
          innerDiv.style.left = shiftedLeft + "px";

          checkTiles();
          setMagnifier();
        }

        var infoDiv = document.getElementById("infoDiv");
        infoDiv.innerHTML =
          "main map (" + innerDiv.style.left + "," + innerDiv.style.top + ") "
            + "x:" + event.clientX + ", y:" + event.clientY;
      }

      function magnifierProcessMove (event) {
        var magnifierDiv = document.getElementById("magnifier");

        var maxX = 0;
        var minX = [% mini_map_width %] - atoi(magnifierDiv.style.width);
        var maxY = 0;
        var minY = [% mini_map_height %] - atoi(magnifierDiv.style.height);

        if (!event) event = window.event;  // for IE
        if (f_magnifierDragging) {
          var shiftedLeft = magnifierLeft + (event.clientX - magnifierDragStartLeft);
          if (shiftedLeft < maxX) shiftedLeft = maxX; // map is not infinite
          if (shiftedLeft > minX) shiftedLeft = minX;
          magnifierDiv.style.left = shiftedLeft + "px";

          var shiftedTop = magnifierTop + (event.clientY - magnifierDragStartTop);
          if (shiftedTop < maxY) shiftedTop = maxY; // map is not infinite
          if (shiftedTop > minY) shiftedTop = minY;
          magnifierDiv.style.top = shiftedTop + "px";

          setMainMap();
        }

        var magnifierInfo = document.getElementById("magnifierInfo");
        magnifierInfo.innerHTML = 
          "magnifer: (" + magnifierDiv.style.left + "," + magnifierDiv.style.top + ") "
          + "x:" + event.clientX + ", y:" + event.clientY;
      }

      function checkTiles() {
        var innerDiv = document.getElementById("innerDiv");
        var visibleTiles = getVisibleTiles();
        var visibleTilesMap = {};

        //alert ("visibleTiles.length: " + visibleTiles.length);

        var creationInfo = "";
        for (i=0;i<visibleTiles.length; i++) {
          var tileArray = visibleTiles[i];
          var tileName = "x" + tileArray[0] + "y" + tileArray[1] + "z" + zoom;
          visibleTilesMap[tileName] = true;
          var img = document.getElementById (tileName);
          if (!img) {
            img = document.createElement("img");
            img.src = "[% "$tiles_subdir/$file_base" %]_" + tileName + ".png";
            img.style.position = "absolute";
            img.style.left = (tileArray[0] * tileSize) + "px";
            img.style.top = (tileArray[1] * tileSize) + "px";
            img.setAttribute("id", tileName);
            innerDiv.appendChild(img);
            creationInfo = creationInfo + tileName + ",\n";
          }
        }

        //alert (creationInfo);
        var imgs = innerDiv.getElementsByTagName("img");
        for (i = 0; i < imgs.length; i++) {
          var id = imgs[i].getAttribute("id");
          if (!visibleTilesMap[id]) {
            innerDiv.removeChild(imgs[i]);
            i--;
          }
        }
      }

      function getVisibleTiles() {
        var innerDiv = document.getElementById("innerDiv");
        var mapX = atoi(innerDiv.style.left);
        var mapY = atoi(innerDiv.style.top);

        var startX = Math.abs(Math.floor(mapX / tileSize)) - 1;
        if (startX < 0) startX = 0;
        var startY = Math.abs(Math.floor(mapY / tileSize)) - 1;
        if (startY < 0) startY = 0;
        var tilesX = Math.ceil(viewPortWidth / tileSize) + 1;
        var tilesY = Math.ceil(viewPortHeight / tileSize) + 1;

        var visibleTileArray = [];
        var counter = 0;
        for (x = startX; x < (tilesX + startX); x++) {
          for (y = startY; y < (tilesY + startY); y++) {
            visibleTileArray[counter++] = [x,y];
          }
        }
        return visibleTileArray;
      }

      function stopMove() {
        var innerDiv = document.getElementById("innerDiv");
        innerDiv.style.cursor = "";
        f_dragging = false;

        //alert ("left: " + innerDiv.style.left + ", top: " + innerDiv.style.top);
      }

      function magnifierStopMove() {
        var magnifierDiv = document.getElementById("magnifier");
        magnifierDiv.style.cursor = "";
        f_magnifierDragging = false;
      }

      function stopDragging () {
        stopMove();
        magnifierStopMove();
      }

      function atoi (s) {
        var val = parseInt(s);
        return (isNaN(val)) ? 0 : val;
      }

      function setMagnifierSize (innerDivWidth, innerDivHeight)
      {
        var magnifierWidth
          = Math.round([% view_port_width  * mini_map_width  %] / innerDivWidth);
        var magnifierHeight
          = Math.round([% view_port_height * mini_map_height %] / innerDivHeight);
        var magnifierDiv = document.getElementById("magnifier");
        magnifierDiv.style.width  = magnifierWidth  + "px";
        magnifierDiv.style.height = magnifierHeight + "px";
      }

      function setMagnifier () {
        var innerDiv = document.getElementById("innerDiv");
        var innerDivWidth  = atoi(innerDiv.style.width);
        var innerDivHeight = atoi(innerDiv.style.height);
        var innerDivLeft   = atoi(innerDiv.style.left);
        var innerDivTop    = atoi(innerDiv.style.top);
        magnifierLeft
          = Math.round(Math.abs(innerDivLeft) * miniMapWidth  / innerDivWidth);
          // global
        magnifierTop
          = Math.round(Math.abs(innerDivTop)  * miniMapHeight / innerDivHeight);
          // global

        // alter magnifier
        var magnifierDiv = document.getElementById("magnifier");
        magnifierDiv.style.left   = magnifierLeft   + "px";
        magnifierDiv.style.top    = magnifierTop    + "px";

        //var magnifierInfo = document.getElementById("magnifierInfo");
        //magnifierInfo.innerHTML =
        // "magnifier (" + magnifierLeft + ',' + magnifierTop + ') '
        // + "innerDivLeft:" + innerDivLeft + " "
        // + "miniMapWidth:" + miniMapWidth + " "
        // + "innerDivWidth:" + innerDivWidth;
      }

      // movement in the magnifier moves the main map
      function setMainMap()
      {
        var magDiv   = document.getElementById("magnifier");
        var innerDiv = document.getElementById("innerDiv");
        var magLeft        = atoi(magDiv.style.left);
        var magTop         = atoi(magDiv.style.top);
        var magWidth       = atoi(magDiv.style.width);
        var magHeight      = atoi(magDiv.style.height);
        var innerDivWidth  = atoi(innerDiv.style.width);
        var innerDivHeight = atoi(innerDiv.style.height);

        var innerDivLeft = (-magLeft) * innerDivWidth  / [% mini_map_width  %];
        var innerDivTop  = (-magTop)  * innerDivHeight / [% mini_map_height %];
        innerDiv.style.left = innerDivLeft + "px";
        innerDiv.style.top  = innerDivTop  + "px";

        checkTiles();
      }

      function setInnerDivSize(width, height) {
        var innerDiv = document.getElementById("innerDiv");
        innerDiv.style.width  = width  + "px";
        innerDiv.style.height = height + "px";
        setMagnifier();
        setMagnifierSize (width, height);
      }

      function setZoom (zoomLevel)
      {
        if (zoom == zoomLevel) return;

        var innerDiv = document.getElementById("innerDiv");
        var imgs = innerDiv.getElementsByTagName("img");
        while (imgs.length > 0) {
          innerDiv.removeChild(imgs[0]);
        }

        var oldLeft   = atoi(innerDiv.style.left);
        var oldTop    = atoi(innerDiv.style.top);
        var oldWidth  = zoomSizes[zoom][0];
        var oldHeight = zoomSizes[zoom][1];
        var newWidth  = zoomSizes[zoomLevel][0];
        var newHeight = zoomSizes[zoomLevel][1];

        var newLeft = Math.round(newWidth  * oldLeft / oldWidth);
        var newTop  = Math.round(newHeight * oldTop  / oldHeight);
        innerDiv.style.left = newLeft + "px";
        innerDiv.style.top  = newTop  + "px";

        zoom = zoomLevel;  // set the global zoom
        setInnerDivSize (newWidth, newHeight);
        checkTiles();
      }

      //]]>
    </script>
  </head>
  <body onload="init()">
    <h2>AJAX Map (Work in Progress)</h2>
    <div id="infoDiv">
      info div
    </div>
    <div id="magnifierInfo">
      magnifier info
    </div>
    <div id="outerDiv">
      [% FOREACH dim = dimensions %]
        <!-- zoom [% loop.index %]: [% dim.width %], [% dim.height %] -->
        <div style="position:absolute;
                    top:[% (loop.index + 1) * 12 %]px; left:10px; z-index:1;
                    width:20px; height:5px; font-size:10%;
                    border:solid 1px blue; background:#d6e7ee"
            onclick="setZoom([% loop.index %])">
        </div>
      [%- END %]
      <div id="innerDiv" style="z-index: 0">
      </div>
    </div>
    <div style="position:absolute; left:550px; top:10px; 
                border: solid black thin; ">
      <div id="miniMap">
        <img src="rendered/mini_map.png" alt="mini map" border="0"
          style="width:[% mini_map_width %]px; height:[% mini_map_height %]px;" />
      </div>
      <div id="magnifier"
        style="position:absolute; left:0px; top:0px; z-index:1; 
               background:transparent; border: solid black thin;">
      </div>
    </div>
    <div style="position:absolute; left:550px; top:300px; width:250px;
                border:black solid 1px; background:#d6e7ee; padding-left:2px;
                font:normal 10pt serif;">
      Google style draggable maps. Go ahead and mouse drag within the main
      map. The magnifier in the mini map is also draggable. This program
      can also generate all the files necessary to run this off your own
      web site. Ask Lambert for a copy of such files.
    </div>
  </body>
</html>
